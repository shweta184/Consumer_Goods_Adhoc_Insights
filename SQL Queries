1. Provide the list of markets in which customer "Atliq Exclusive" operates its business in the APAC region.

select distinct market from dim_customer
where customer = "Atliq Exclusive" and region = "APAC";

2. Provide a report with all the unique product counts for each segment and sort them in descending order of product counts. The final output contains 2 fields segment, product_count.

select segment, count(distinct product_code) as product_count
from dim_product
group by segment
order by product_count desc;

3. Get the products that have the highest and lowest manufacturing costs. The final output should contain these fields, product_code, product, manufacturing_cost.

select p.product_code, p.product, m.manufacturing_cost
from dim_product p 
join fact_manufacturing_cost m
on p.product_code=m.product_code
where manufacturing_cost =
(Select max(manufacturing_cost) from fact_manufacturing_cost) or 
manufacturing_cost = (Select min(manufacturing_cost) from fact_manufacturing_cost);

4. Generate a report which contains the top 5 customers who received an average high pre_invoice_discount_pct for the fiscal year 2021 and in the Indian market. The final output contains these fields, customer_code, customer, average_discount_percentage.

select c.customer_code, c.customer, round(avg(p.pre_invoice_discount_pct),4) as average_discount_percentage
from dim_customer c join fact_pre_invoice_deductions p
on c.customer_code=p.customer_code
where p.fiscal_year = 2021 and sub_zone = "India"
group by c.customer_code, c.customer
order by average_discount_percentage desc
limit 5;

5. Get the complete report of the Gross sales amount for the customer “Atliq Exclusive” for each month. This analysis helps to get an idea of low and high-performing months and take strategic decisions. The final report contains these columns: Month, Year, Gross sales Amount.

select month(m.date) as month, m.fiscal_year as year, round(sum(sold_quantity*gross_price),2) as gross_sales_amount
from dim_customer c join fact_sales_monthly m on c.customer_code=m.customer_code
join fact_gross_price p on m.product_code=p.product_code
where c.customer = "Atliq Exclusive"
group by month(m.date), m.fiscal_year
order by month, year;

6. What is the percentage of unique product increase in 2021 vs. 2020? The final output contains these fields, unique_products_2020, unique_products_2021, percentage_chg.

with pc_2020 as (
select count(distinct product_code) as unique_product_2020 from fact_sales_monthly
where fiscal_year=2020),
pc_2021 as (
select count(distinct product_code) as unique_product_2021 from fact_sales_monthly
where fiscal_year=2021)
select unique_product_2020, unique_product_2021, round(((unique_product_2021-unique_product_2020)*100/unique_product_2020),2) as percentage_chg
from pc_2020, pc_2021;

7. Which segment had the most increase in unique products in 2021 vs 2020? The final output contains these fields, segment, product_count_2020, product_count_2021, difference.

with pc_2020 as (
Select p.segment as segment, count(distinct p.product_code) as product_count 
from dim_product p join fact_sales_monthly f on p.product_code = f.product_code
where f.fiscal_year = 2020
group by p.segment
),
pc_2021 as(
Select p.segment as segment, count(distinct p.product_code) as product_count1 
from dim_product p join fact_sales_monthly f on p.product_code = f.product_code
where f.fiscal_year = 2021
group by p.segment
)
Select pc_2020.segment, product_count, product_count1, (product_count1-product_count) as difference
from pc_2020 join pc_2021 on pc_2020.segment=pc_2021.segment;

8. In which quarter of 2020, got the maximum total_sold_quantity? The final output contains these fields sorted by the total_sold_quantity, Quarter total_sold_quantity.

with cte as (
select *, 
case when month(date)>=9 and month(date)<12 then "Q1"
when month(date)=12 or month(date)=1 or month(date)=2 then "Q2"
when month(date)>=3 and month(date)<6 then "Q3"
when month(date)>=6 and month(date)<9 then "Q4"
end as "Quarter"
from fact_sales_monthly)
select Quarter, sum(sold_quantity) as total_sold_quantity
from cte
where fiscal_year=2020
group by quarter
order by total_sold_quantity;

9. Which channel helped to bring more gross sales in the fiscal year 2021 and the percentage of contribution? The final output contains these fields, channel, gross_sales_mln, percentage.

with cte as (
select c.channel, sum(s.sold_quantity*p.gross_price) as gross_sales_mln
from dim_customer c join fact_sales_monthly s
on c.customer_code= s.customer_code
join fact_gross_price p 
on s.product_code= p.product_code
where s.fiscal_year=2021
group by c.channel
order by gross_sales_mln desc
)
select channel, gross_sales_mln, round((gross_sales_mln/SUM(gross_sales_mln) OVER ()*100),2) as percentage
from cte
limit 1;

10. Get the Top 3 products in each division that have a high total_sold_quantity in the fiscal_year 2021? The final output contains these fields, division product_code, product, total_sold_quantity rank_order.

with cte as (
select p.division, p.product_code, p.product, sum(sold_quantity) as total_sold_quantity
from dim_product p join fact_sales_monthly f 
on p.product_code=f.product_code
where fiscal_year=2021
group by p.division, p.product_code, p.product
order by total_sold_quantity desc),
cte1 as( 
select *, dense_rank() over(partition by division order by total_sold_quantity) as order_rank from cte)
select *
from cte1
where order_rank<=3;
